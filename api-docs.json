{
  "openapi": "3.0.0",
  "info": {
    "title": "The Aha API",
    "version": "1.0",
    "description": "Please note that this is primarily intended for iOS development within the Aha team."
  },
  "servers": [
    {
      "url": "https://aha.youthacks.org/api",
      "description": "Youthacks"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Login",
        "description": "Login as an admin. Returns a token and user details.",
        "operationId": "createAdminSession",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "matthew"
                  },
                  "password": {
                    "type": "string",
                    "example": "mySecret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "rn6cbtub32372"
                      }
                    },
                    "admin": {
                      "$ref": "../models/admin.yaml"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid name or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid email or password",
                      "x-stoplight": {
                        "id": "duuwc9aien3u1"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-stoplight": {
          "id": "xxv8rgrzlcrin"
        }
      },
      "parameters": []
    },
    "/forgot_password": {
      "post": {
        "summary": "Forgot Password",
        "responses": {
          "404": {
            "description": "Admin Not Found",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "3e1xw2he5xzzg"
                      }
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented"
          }
        },
        "operationId": "get-api-forgot_password",
        "x-stoplight": {
          "id": "305nzfvszj4cx"
        },
        "description": "Reset password if forgotten.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "h7fu3sb89ozn3"
                    },
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/signup": {
      "post": {
        "summary": "Signup",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "hqov6chdnn0j1"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "N",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "gas60gj3joaug"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-signup",
        "x-stoplight": {
          "id": "8xqmisyruk6iq"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "s4mbse5ptp24r"
                    }
                  },
                  "password": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "kelfcttky34oe"
                    }
                  },
                  "email": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "e4fsgsru8osp6"
                    },
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/resend_code": {
      "post": {
        "summary": "Resend Code",
        "tags": [],
        "responses": {
          "200": {
            "description": "Email with code resent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "75l6zwbw3n08h"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-resend_code",
        "x-stoplight": {
          "id": "pmui02rx13qrx"
        },
        "description": "Resend verification code to email to sign up.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header"
          }
        ],
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/confirm_code": {
      "post": {
        "summary": "Confirm Code",
        "tags": [],
        "responses": {
          "201": {
            "description": "Admin created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "oz680w6yz9g50"
                      }
                    },
                    "admin": {
                      "$ref": "../models/admin.yaml"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Invalid code?",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "4c6ljj3pdzksu"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Something went wrong.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "vqr2fvvjynxjc"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-confirm_code",
        "x-stoplight": {
          "id": "p5cpgb9z1bacf"
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/events": {
      "get": {
        "summary": "Events",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK\nList of events are returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "x-stoplight": {
                        "id": "azzqq8g4o97gr"
                      },
                      "type": "array",
                      "items": {
                        "$ref": "../models/event.yaml"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-events",
        "x-stoplight": {
          "id": "fv9egnpzgtzhk"
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}